name: CI Build
on:
  push:
    branches:
      - master
    paths:
      - "**.cpp"
      - "**.h"
      - "CMakePresets.json"
      - "CMakeLists.txt"
      - ".gitmodules"
      - "libs/**"
      - ".github/workflows/build.yml"
      - "release/*.dll"
  pull_request:
    branches:
      - master
    paths:
      - "**.cpp"
      - "**.h"
      - "CMakePresets.json"
      - "CMakeLists.txt"
      - ".gitmodules"
      - "libs/**"
      - ".github/workflows/build.yml"
      - "release/*.dll"

jobs:
  build:
    strategy:
      matrix:
        os-prefix: [windows]
        arch: [x64] #[x86, x64]
        target: [release, relwithsymbols]
        include:
          - os-prefix: windows
            os: windows-latest
          #- os-prefix: linux
          #  os: ubuntu-latest

          #- arch: x86
          #  msvc-arch: amd64_x86
          - arch: x64
            msvc-arch: amd64

    name: Build module
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get MSVC libs
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.msvc-arch }}

      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@latest

      - name: Run CMake - OpenMP
        id: build
        uses: lukka/run-cmake@v10
        with:
          configurePreset: "${{ matrix.os-prefix }}-${{ matrix.arch }}-${{ matrix.target }}"
          buildPreset: "${{ matrix.os-prefix }}-${{ matrix.arch }}-${{ matrix.target }}"

      - name: Run CMake - No OpenMP
        id: build
        uses: lukka/run-cmake@v10
        with:
          configurePreset: "${{ matrix.os-prefix }}-${{ matrix.arch }}-${{ matrix.target }}-no-omp"
          buildPreset: "${{ matrix.os-prefix }}-${{ matrix.arch }}-${{ matrix.target }}-no-omp"

      - name: Upload Release Artefact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os-prefix }} ${{ matrix.arch }}
          path: release
        if: (matrix.target == 'release') && (steps.build.outcome == 'success') && (github.event_name == 'push')
